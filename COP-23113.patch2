diff --git a/dbclient/src/main/java/com/emc/storageos/db/client/impl/DbCheckerFileWriter.java b/dbclient/src/main/java/com/emc/storageos/db/client/impl/DbCheckerFileWriter.java
index 7358a72..c25e6dd 100644
--- a/dbclient/src/main/java/com/emc/storageos/db/client/impl/DbCheckerFileWriter.java
+++ b/dbclient/src/main/java/com/emc/storageos/db/client/impl/DbCheckerFileWriter.java
@@ -18,6 +18,7 @@ import java.nio.file.attribute.PosixFileAttributeView;
 import java.nio.file.attribute.PosixFilePermission;
 import java.nio.file.attribute.UserPrincipal;
 import java.nio.file.attribute.UserPrincipalLookupService;
+import java.util.Date;
 import java.util.EnumSet;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -39,14 +40,15 @@ public class DbCheckerFileWriter {
 
     public static final String COMMENT_CHAR = "--";
     private static final String USAGE_COMMON_LINE1 = "This file is inconsistent data generated by Database Consistency Checker, please be much cautious playing with it.";
-    private static final String USAGE_COMMON_LINE2 = "You can use the following command to clean up these inconsistent data.";
+    private static final String USAGE_COMMON_LINE2 = "You can use the following command to clean up these inconsistent data. [Generated Date: %s]";
+    private static final String USAGE_COMMON_LINE2_WITH_DATE = String.format(USAGE_COMMON_LINE2, new Date());
     private static final String USAGE_STORAGEOS = String.format("%s %s\n%s %s\n%s /opt/storageos/bin/cqlsh -k StorageOS -f %s\n",
-            COMMENT_CHAR, USAGE_COMMON_LINE1, COMMENT_CHAR, USAGE_COMMON_LINE2, COMMENT_CHAR, CLEANUP_FILE_STORAGEOS);
+            COMMENT_CHAR, USAGE_COMMON_LINE1, COMMENT_CHAR, USAGE_COMMON_LINE2_WITH_DATE, COMMENT_CHAR, CLEANUP_FILE_STORAGEOS);
     private static final String USAGE_GEOSTORAGEOS = String.format(
             "%s %s\n%s %s\n%s /opt/storageos/bin/cqlsh -k GeoStorageOS -f %s localhost 9260\n",
-            COMMENT_CHAR, USAGE_COMMON_LINE1, COMMENT_CHAR, USAGE_COMMON_LINE2, COMMENT_CHAR, CLEANUP_FILE_GEOSTORAGEOS);
+            COMMENT_CHAR, USAGE_COMMON_LINE1, COMMENT_CHAR, USAGE_COMMON_LINE2_WITH_DATE, COMMENT_CHAR, CLEANUP_FILE_GEOSTORAGEOS);
     private static final String USAGE_REBUILDINDEX = String.format("%s %s\n%s %s\n%s /opt/storageos/bin/dbutils rebuild_index %s\n",
-            COMMENT_CHAR, USAGE_COMMON_LINE1, COMMENT_CHAR, USAGE_COMMON_LINE2, COMMENT_CHAR, CLEANUP_FILE_REBUILD_INDEX);
+            COMMENT_CHAR, USAGE_COMMON_LINE1, COMMENT_CHAR, USAGE_COMMON_LINE2_WITH_DATE, COMMENT_CHAR, CLEANUP_FILE_REBUILD_INDEX);
 
     private static final String STORAGEOS_NAME = "storageos";
     private static String owner = STORAGEOS_NAME;
@@ -101,6 +103,7 @@ public class DbCheckerFileWriter {
             try {
                 if (writer != null) {
                     writer.close();
+                    writer = null;
                 }
             } catch (IOException e) {
                 log.error("Exception happens when closing file, e=", e);
@@ -133,9 +136,9 @@ public class DbCheckerFileWriter {
     }
     
     enum WriteType {
-        STORAGEOS("StorageOS", CLEANUP_FILE_STORAGEOS, USAGE_STORAGEOS),
-        GEOSTORAGEOS("GeoStorageOS", CLEANUP_FILE_GEOSTORAGEOS, USAGE_GEOSTORAGEOS),
-        REBUILD_INDEX("RebuildIndex", CLEANUP_FILE_REBUILD_INDEX, USAGE_REBUILDINDEX);
+        STORAGEOS(WRITER_STORAGEOS, CLEANUP_FILE_STORAGEOS, USAGE_STORAGEOS),
+        GEOSTORAGEOS(WRITER_GEOSTORAGEOS, CLEANUP_FILE_GEOSTORAGEOS, USAGE_GEOSTORAGEOS),
+        REBUILD_INDEX(WRITER_REBUILD_INDEX, CLEANUP_FILE_REBUILD_INDEX, USAGE_REBUILDINDEX);
         String type;
         String filename;
         String usage;
diff --git a/dbclient/src/main/java/com/emc/storageos/db/client/impl/DbConsistencyCheckerHelper.java b/dbclient/src/main/java/com/emc/storageos/db/client/impl/DbConsistencyCheckerHelper.java
index 55ca287..67199b8 100644
--- a/dbclient/src/main/java/com/emc/storageos/db/client/impl/DbConsistencyCheckerHelper.java
+++ b/dbclient/src/main/java/com/emc/storageos/db/client/impl/DbConsistencyCheckerHelper.java
@@ -13,6 +13,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.Set;
 import java.util.TreeMap;
+import java.util.UUID;
 
 import com.emc.storageos.db.client.model.DataObject;
 import com.emc.storageos.db.client.model.NamedURI;
@@ -37,6 +38,9 @@ public class DbConsistencyCheckerHelper {
     private static final Logger _log = LoggerFactory.getLogger(DbConsistencyCheckerHelper.class);
     private static final int INDEX_OBJECTS_BATCH_SIZE = 10000;
 
+    private static final String DELETE_INDEX_CQL = "delete from \"%s\" where key='%s' and column1='%s' and column2='%s' and column3='%s' and column4='%s' and column5=%s;";
+    private static final String DELETE_INDEX_CQL_WITHOUT_UUID = "delete from \"%s\" where key='%s' and column1='%s' and column2='%s' and column3='%s' and column4='%s';";
+
     private DbClientImpl dbClient;
 
     public DbConsistencyCheckerHelper() {
@@ -268,17 +272,15 @@ public class DbConsistencyCheckerHelper {
                                 indexAndCf.cf.getName(), indexAndCf.indexType.getSimpleName(),
                                 idxEntry.getIndexKey(), idxEntry.getColumnName(),
                                 objCf.getName(), row.getKey()), true, toConsole);
+                        UUID timeUUID = idxEntry.getColumnName().getTimeUUID();
                         DbCheckerFileWriter.writeTo(indexAndCf.keyspace.getKeyspaceName(),
-                                String.format(
-                                        "delete from \"%s\" where key='%s' and column1='%s' and column2='%s' and column3='%s' and column4='%s' and column5=%s;",
+                                String.format(timeUUID != null ? DELETE_INDEX_CQL : DELETE_INDEX_CQL_WITHOUT_UUID,
                                         indexAndCf.cf.getName(), idxEntry.getIndexKey(), idxEntry.getColumnName().getOne(),
                                         idxEntry.getColumnName().getTwo(),
                                         handleNullValue(idxEntry.getColumnName().getThree()),
                                         handleNullValue(idxEntry.getColumnName().getFour()),
-                                        idxEntry.getColumnName().getTimeUUID()));
-
+                                        timeUUID));
                     }
-
                 }
             }
         }

package com.emc.storageos.vasa;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2015-10-01T14:11:45.283+05:30
 * Generated source version: 3.0.3
 * 
 */
@WebServiceClient(name = "vasaService", 
                  wsdlLocation = "classpath:wsdl/2.0/vasaService.wsdl",
                  targetNamespace = "http://com.vmware.vim.vasa/2.0/") 
public class VasaService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://com.vmware.vim.vasa/2.0/", "vasaService");
    public final static QName VasaServiceHttpSoap11Endpoint = new QName("http://com.vmware.vim.vasa/2.0/", "vasaServiceHttpSoap11Endpoint");
    public final static QName VasaServiceHttpSoap12Endpoint = new QName("http://com.vmware.vim.vasa/2.0/", "vasaServiceHttpSoap12Endpoint");
    public final static QName VasaServiceHttpEndpoint = new QName("http://com.vmware.vim.vasa/2.0/", "vasaServiceHttpEndpoint");
    static {
        URL url = VasaService_Service.class.getClassLoader().getResource("wsdl/2.0/vasaService.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(VasaService_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/2.0/vasaService.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public VasaService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public VasaService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public VasaService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public VasaService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public VasaService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public VasaService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns VasaServicePortType
     */
    @WebEndpoint(name = "vasaServiceHttpSoap11Endpoint")
    public VasaServicePortType getVasaServiceHttpSoap11Endpoint() {
        return super.getPort(VasaServiceHttpSoap11Endpoint, VasaServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns VasaServicePortType
     */
    @WebEndpoint(name = "vasaServiceHttpSoap11Endpoint")
    public VasaServicePortType getVasaServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(VasaServiceHttpSoap11Endpoint, VasaServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns VasaServicePortType
     */
    @WebEndpoint(name = "vasaServiceHttpSoap12Endpoint")
    public VasaServicePortType getVasaServiceHttpSoap12Endpoint() {
        return super.getPort(VasaServiceHttpSoap12Endpoint, VasaServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns VasaServicePortType
     */
    @WebEndpoint(name = "vasaServiceHttpSoap12Endpoint")
    public VasaServicePortType getVasaServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(VasaServiceHttpSoap12Endpoint, VasaServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns VasaServicePortType
     */
    @WebEndpoint(name = "vasaServiceHttpEndpoint")
    public VasaServicePortType getVasaServiceHttpEndpoint() {
        return super.getPort(VasaServiceHttpEndpoint, VasaServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns VasaServicePortType
     */
    @WebEndpoint(name = "vasaServiceHttpEndpoint")
    public VasaServicePortType getVasaServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(VasaServiceHttpEndpoint, VasaServicePortType.class, features);
    }

}

package com.emc.storageos.vasa;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2015-10-01T14:11:45.238+05:30
 * Generated source version: 3.0.3
 * 
 */
@WebService(targetNamespace = "http://com.vmware.vim.vasa/2.0/", name = "vasaServicePortType")
@XmlSeeAlso({ObjectFactory.class})
public interface VasaServicePortType {

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryVirtualVolume", output = "urn:queryVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryVirtualVolumeInactiveProvider"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryVirtualVolumeVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryVirtualVolumeInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryVirtualVolumeNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "queryVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryVirtualVolume")
    @WebMethod(action = "urn:queryVirtualVolume")
    @ResponseWrapper(localName = "queryVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryVirtualVolumeResponse")
    public java.util.List<java.lang.String> queryVirtualVolume(
        @WebParam(name = "searchConstraint", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<com.emc.storageos.vasa.QueryConstraint> searchConstraint
    ) throws InactiveProvider_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:getEvents", output = "urn:getEventsResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:getEventsInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:getEventsInvalidArgument"), @FaultAction(className = StorageFault_Exception.class, value = "urn:getEventsStorageFault"), @FaultAction(className = LostEvent_Exception.class, value = "urn:getEventsLostEvent")})
    @RequestWrapper(localName = "getEvents", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetEvents")
    @WebMethod(action = "urn:getEvents")
    @ResponseWrapper(localName = "getEventsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetEventsResponse")
    public java.util.List<com.emc.storageos.vasa.StorageEvent> getEvents(
        @WebParam(name = "lastEventId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.Long lastEventId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, StorageFault_Exception, LostEvent_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryUniqueIdentifiersForEntity", output = "urn:queryUniqueIdentifiersForEntityResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryUniqueIdentifiersForEntityInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryUniqueIdentifiersForEntityInvalidArgument"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryUniqueIdentifiersForEntityStorageFault")})
    @RequestWrapper(localName = "queryUniqueIdentifiersForEntity", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryUniqueIdentifiersForEntity")
    @WebMethod(action = "urn:queryUniqueIdentifiersForEntity")
    @ResponseWrapper(localName = "queryUniqueIdentifiersForEntityResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryUniqueIdentifiersForEntityResponse")
    public java.util.List<java.lang.String> queryUniqueIdentifiersForEntity(
        @WebParam(name = "entityType", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String entityType
    ) throws InvalidSession_Exception, InvalidArgument_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "queryCACertificateRevocationListsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", partName = "parameters")
    @Action(input = "urn:queryCACertificateRevocationLists", output = "urn:queryCACertificateRevocationListsResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryCACertificateRevocationListsInvalidSession"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryCACertificateRevocationListsVasaProviderBusy"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryCACertificateRevocationListsStorageFault")})
    @WebMethod(action = "urn:queryCACertificateRevocationLists")
    public QueryCACertificateRevocationListsResponse queryCACertificateRevocationLists() throws InvalidSession_Exception, VasaProviderBusy_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryStorageProcessors", output = "urn:queryStorageProcessorsResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryStorageProcessorsInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryStorageProcessorsInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryStorageProcessorsNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryStorageProcessorsStorageFault")})
    @RequestWrapper(localName = "queryStorageProcessors", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageProcessors")
    @WebMethod(action = "urn:queryStorageProcessors")
    @ResponseWrapper(localName = "queryStorageProcessorsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageProcessorsResponse")
    public java.util.List<com.emc.storageos.vasa.StorageProcessor> queryStorageProcessors(
        @WebParam(name = "spUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> spUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:prepareForBindingChange", output = "urn:prepareForBindingChangeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:prepareForBindingChangeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:prepareForBindingChangeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:prepareForBindingChangeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:prepareForBindingChangeVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:prepareForBindingChangeInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:prepareForBindingChangeNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:prepareForBindingChangeStorageFault")})
    @RequestWrapper(localName = "prepareForBindingChange", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.PrepareForBindingChange")
    @WebMethod(action = "urn:prepareForBindingChange")
    @ResponseWrapper(localName = "prepareForBindingChangeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.PrepareForBindingChangeResponse")
    public com.emc.storageos.vasa.TaskInfo prepareForBindingChange(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> vvolId,
        @WebParam(name = "destHostId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String destHostId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:unsharedChunksVirtualVolume", output = "urn:unsharedChunksVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:unsharedChunksVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:unsharedChunksVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:unsharedChunksVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:unsharedChunksVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:unsharedChunksVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:unsharedChunksVirtualVolumeInvalidSession"), @FaultAction(className = IncompatibleVolume_Exception.class, value = "urn:unsharedChunksVirtualVolumeIncompatibleVolume"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:unsharedChunksVirtualVolumeNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:unsharedChunksVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "unsharedChunksVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UnsharedChunksVirtualVolume")
    @WebMethod(action = "urn:unsharedChunksVirtualVolume")
    @ResponseWrapper(localName = "unsharedChunksVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UnsharedChunksVirtualVolumeResponse")
    public com.emc.storageos.vasa.VirtualVolumeUnsharedChunksResult unsharedChunksVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolId,
        @WebParam(name = "baseVvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String baseVvolId,
        @WebParam(name = "segmentStartOffsetBytes", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long segmentStartOffsetBytes,
        @WebParam(name = "segmentLengthBytes", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long segmentLengthBytes
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, IncompatibleVolume_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryAssociatedStatisticsManifestForArray", output = "urn:queryAssociatedStatisticsManifestForArrayResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryAssociatedStatisticsManifestForArrayInactiveProvider"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryAssociatedStatisticsManifestForArrayInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryAssociatedStatisticsManifestForArrayVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryAssociatedStatisticsManifestForArrayInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryAssociatedStatisticsManifestForArrayNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryAssociatedStatisticsManifestForArrayStorageFault")})
    @RequestWrapper(localName = "queryAssociatedStatisticsManifestForArray", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedStatisticsManifestForArray")
    @WebMethod(action = "urn:queryAssociatedStatisticsManifestForArray")
    @ResponseWrapper(localName = "queryAssociatedStatisticsManifestForArrayResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedStatisticsManifestForArrayResponse")
    public java.util.List<com.emc.storageos.vasa.ArrayStatisticsManifest> queryAssociatedStatisticsManifestForArray(
        @WebParam(name = "arrayStatisticsManifest", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<com.emc.storageos.vasa.ArrayStatisticsManifest> arrayStatisticsManifest
    ) throws InactiveProvider_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:resizeVirtualVolume", output = "urn:resizeVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:resizeVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:resizeVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:resizeVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:resizeVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:resizeVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:resizeVirtualVolumeInvalidSession"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:resizeVirtualVolumePermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:resizeVirtualVolumeNotImplemented"), @FaultAction(className = ResourceInUse_Exception.class, value = "urn:resizeVirtualVolumeResourceInUse"), @FaultAction(className = OutOfResource_Exception.class, value = "urn:resizeVirtualVolumeOutOfResource"), @FaultAction(className = StorageFault_Exception.class, value = "urn:resizeVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "resizeVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.ResizeVirtualVolume")
    @WebMethod(action = "urn:resizeVirtualVolume")
    @ResponseWrapper(localName = "resizeVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.ResizeVirtualVolumeResponse")
    public com.emc.storageos.vasa.TaskInfo resizeVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolId,
        @WebParam(name = "sizeInMB", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long sizeInMB,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, PermissionDenied_Exception, NotImplemented_Exception, ResourceInUse_Exception, OutOfResource_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryProtocolEndpointForArray", output = "urn:queryProtocolEndpointForArrayResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryProtocolEndpointForArrayInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryProtocolEndpointForArrayNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryProtocolEndpointForArrayInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryProtocolEndpointForArrayVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryProtocolEndpointForArrayInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryProtocolEndpointForArrayNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryProtocolEndpointForArrayStorageFault")})
    @RequestWrapper(localName = "queryProtocolEndpointForArray", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryProtocolEndpointForArray")
    @WebMethod(action = "urn:queryProtocolEndpointForArray")
    @ResponseWrapper(localName = "queryProtocolEndpointForArrayResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryProtocolEndpointForArrayResponse")
    public java.util.List<java.lang.String> queryProtocolEndpointForArray(
        @WebParam(name = "arrayId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String arrayId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:cancelTask", output = "urn:cancelTaskResponse", fault = {@FaultAction(className = NotCancellable_Exception.class, value = "urn:cancelTaskNotCancellable"), @FaultAction(className = InactiveProvider_Exception.class, value = "urn:cancelTaskInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:cancelTaskNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:cancelTaskInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:cancelTaskVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:cancelTaskInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:cancelTaskNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:cancelTaskStorageFault")})
    @WebMethod(action = "urn:cancelTask")
    public void cancelTask(
        @WebParam(partName = "parameters", name = "cancelTask", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        CancelTask parameters
    ) throws NotCancellable_Exception, InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryCapabilityProfile", output = "urn:queryCapabilityProfileResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryCapabilityProfileInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryCapabilityProfileNotFound"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryCapabilityProfileVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryCapabilityProfileInvalidSession"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryCapabilityProfileStorageFault")})
    @RequestWrapper(localName = "queryCapabilityProfile", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryCapabilityProfile")
    @WebMethod(action = "urn:queryCapabilityProfile")
    @ResponseWrapper(localName = "queryCapabilityProfileResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryCapabilityProfileResponse")
    public java.util.List<com.emc.storageos.vasa.StorageProfile> queryCapabilityProfile(
        @WebParam(name = "profileId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> profileId
    ) throws InactiveProvider_Exception, NotFound_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryCapabilityMetadata", output = "urn:queryCapabilityMetadataResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryCapabilityMetadataInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryCapabilityMetadataNotFound"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryCapabilityMetadataVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryCapabilityMetadataInvalidSession"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryCapabilityMetadataStorageFault")})
    @RequestWrapper(localName = "queryCapabilityMetadata", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryCapabilityMetadata")
    @WebMethod(action = "urn:queryCapabilityMetadata")
    @ResponseWrapper(localName = "queryCapabilityMetadataResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryCapabilityMetadataResponse")
    public java.util.List<com.emc.storageos.vasa.CapabilitySchema> queryCapabilityMetadata(
        @WebParam(name = "schemaId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> schemaId
    ) throws InactiveProvider_Exception, NotFound_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryCapabilityProfileForResource", output = "urn:queryCapabilityProfileForResourceResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryCapabilityProfileForResourceInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryCapabilityProfileForResourceNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryCapabilityProfileForResourceInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryCapabilityProfileForResourceVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryCapabilityProfileForResourceInvalidSession"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryCapabilityProfileForResourceStorageFault")})
    @RequestWrapper(localName = "queryCapabilityProfileForResource", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryCapabilityProfileForResource")
    @WebMethod(action = "urn:queryCapabilityProfileForResource")
    @ResponseWrapper(localName = "queryCapabilityProfileForResourceResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryCapabilityProfileForResourceResponse")
    public java.util.List<com.emc.storageos.vasa.ResourceAssociation> queryCapabilityProfileForResource(
        @WebParam(name = "resourceId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> resourceId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryAssociatedLunsForPort", output = "urn:queryAssociatedLunsForPortResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryAssociatedLunsForPortInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryAssociatedLunsForPortInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryAssociatedLunsForPortNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryAssociatedLunsForPortStorageFault")})
    @RequestWrapper(localName = "queryAssociatedLunsForPort", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedLunsForPort")
    @WebMethod(action = "urn:queryAssociatedLunsForPort")
    @ResponseWrapper(localName = "queryAssociatedLunsForPortResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedLunsForPortResponse")
    public java.util.List<com.emc.storageos.vasa.VasaAssociationObject> queryAssociatedLunsForPort(
        @WebParam(name = "portUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> portUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryProtocolEndpoint", output = "urn:queryProtocolEndpointResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryProtocolEndpointInvalidSession"), @FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryProtocolEndpointInactiveProvider"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryProtocolEndpointVasaProviderBusy"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryProtocolEndpointNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryProtocolEndpointStorageFault")})
    @RequestWrapper(localName = "queryProtocolEndpoint", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryProtocolEndpoint")
    @WebMethod(action = "urn:queryProtocolEndpoint")
    @ResponseWrapper(localName = "queryProtocolEndpointResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryProtocolEndpointResponse")
    public java.util.List<com.emc.storageos.vasa.ProtocolEndpoint> queryProtocolEndpoint(
        @WebParam(name = "peId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> peId
    ) throws InvalidSession_Exception, InactiveProvider_Exception, VasaProviderBusy_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryBackingStoragePools", output = "urn:queryBackingStoragePoolsResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryBackingStoragePoolsInactiveProvider"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryBackingStoragePoolsInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryBackingStoragePoolsVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryBackingStoragePoolsInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryBackingStoragePoolsNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryBackingStoragePoolsStorageFault")})
    @RequestWrapper(localName = "queryBackingStoragePools", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryBackingStoragePools")
    @WebMethod(action = "urn:queryBackingStoragePools")
    @ResponseWrapper(localName = "queryBackingStoragePoolsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryBackingStoragePoolsResponse")
    public java.util.List<com.emc.storageos.vasa.BackingStoragePool> queryBackingStoragePools(
        @WebParam(name = "storagePoolUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> storagePoolUniqueId
    ) throws InactiveProvider_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:bindingChangeComplete", output = "urn:bindingChangeCompleteResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:bindingChangeCompleteInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:bindingChangeCompleteNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:bindingChangeCompleteInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:bindingChangeCompleteVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:bindingChangeCompleteInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:bindingChangeCompleteNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:bindingChangeCompleteStorageFault")})
    @RequestWrapper(localName = "bindingChangeComplete", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.BindingChangeComplete")
    @WebMethod(action = "urn:bindingChangeComplete")
    @ResponseWrapper(localName = "bindingChangeCompleteResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.BindingChangeCompleteResponse")
    public java.util.List<com.emc.storageos.vasa.BatchReturnStatus> bindingChangeComplete(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> vvolId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:unregisterVASACertificate", output = "urn:unregisterVASACertificateResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:unregisterVASACertificateInvalidSession"), @FaultAction(className = InvalidCertificate_Exception.class, value = "urn:unregisterVASACertificateInvalidCertificate"), @FaultAction(className = StorageFault_Exception.class, value = "urn:unregisterVASACertificateStorageFault")})
    @WebMethod(action = "urn:unregisterVASACertificate")
    public void unregisterVASACertificate(
        @WebParam(partName = "parameters", name = "unregisterVASACertificate", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        UnregisterVASACertificate parameters
    ) throws InvalidSession_Exception, InvalidCertificate_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:refreshCACertificatesAndCRLs", output = "urn:refreshCACertificatesAndCRLsResponse", fault = {@FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:refreshCACertificatesAndCRLsVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:refreshCACertificatesAndCRLsInvalidSession"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:refreshCACertificatesAndCRLsPermissionDenied"), @FaultAction(className = InvalidCertificate_Exception.class, value = "urn:refreshCACertificatesAndCRLsInvalidCertificate"), @FaultAction(className = StorageFault_Exception.class, value = "urn:refreshCACertificatesAndCRLsStorageFault")})
    @WebMethod(action = "urn:refreshCACertificatesAndCRLs")
    public void refreshCACertificatesAndCRLs(
        @WebParam(partName = "parameters", name = "refreshCACertificatesAndCRLs", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        RefreshCACertificatesAndCRLs parameters
    ) throws VasaProviderBusy_Exception, InvalidSession_Exception, PermissionDenied_Exception, InvalidCertificate_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:activateProviderEx", output = "urn:activateProviderExResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:activateProviderExInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:activateProviderExInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:activateProviderExVasaProviderBusy"), @FaultAction(className = ActivateProviderFailed_Exception.class, value = "urn:activateProviderExActivateProviderFailed"), @FaultAction(className = StorageFault_Exception.class, value = "urn:activateProviderExStorageFault")})
    @RequestWrapper(localName = "activateProviderEx", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.ActivateProviderEx")
    @WebMethod(action = "urn:activateProviderEx")
    @ResponseWrapper(localName = "activateProviderExResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.ActivateProviderExResponse")
    public com.emc.storageos.vasa.TaskInfo activateProviderEx(
        @WebParam(name = "activationSpec", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        com.emc.storageos.vasa.ActivationSpec activationSpec
    ) throws InvalidSession_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, ActivateProviderFailed_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:setPEContext", output = "urn:setPEContextResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:setPEContextInvalidSession"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:setPEContextVasaProviderBusy"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:setPEContextNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:setPEContextStorageFault")})
    @WebMethod(action = "urn:setPEContext")
    public void setPEContext(
        @WebParam(partName = "parameters", name = "setPEContext", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        SetPEContext parameters
    ) throws InvalidSession_Exception, VasaProviderBusy_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:copyDiffsToVirtualVolume", output = "urn:copyDiffsToVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:copyDiffsToVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:copyDiffsToVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:copyDiffsToVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:copyDiffsToVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:copyDiffsToVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:copyDiffsToVirtualVolumeInvalidSession"), @FaultAction(className = IncompatibleVolume_Exception.class, value = "urn:copyDiffsToVirtualVolumeIncompatibleVolume"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:copyDiffsToVirtualVolumePermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:copyDiffsToVirtualVolumeNotImplemented"), @FaultAction(className = ResourceInUse_Exception.class, value = "urn:copyDiffsToVirtualVolumeResourceInUse"), @FaultAction(className = StorageFault_Exception.class, value = "urn:copyDiffsToVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "copyDiffsToVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.CopyDiffsToVirtualVolume")
    @WebMethod(action = "urn:copyDiffsToVirtualVolume")
    @ResponseWrapper(localName = "copyDiffsToVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.CopyDiffsToVirtualVolumeResponse")
    public com.emc.storageos.vasa.TaskInfo copyDiffsToVirtualVolume(
        @WebParam(name = "srcVVolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String srcVVolId,
        @WebParam(name = "srcBaseVVolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String srcBaseVVolId,
        @WebParam(name = "dstVVolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String dstVVolId,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, IncompatibleVolume_Exception, PermissionDenied_Exception, NotImplemented_Exception, ResourceInUse_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:prepareToSnapshotVirtualVolume", output = "urn:prepareToSnapshotVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeInvalidSession"), @FaultAction(className = SnapshotTooMany_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeSnapshotTooMany"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:prepareToSnapshotVirtualVolumePermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeNotImplemented"), @FaultAction(className = ResourceInUse_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeResourceInUse"), @FaultAction(className = OutOfResource_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeOutOfResource"), @FaultAction(className = StorageFault_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeStorageFault"), @FaultAction(className = InvalidProfile_Exception.class, value = "urn:prepareToSnapshotVirtualVolumeInvalidProfile")})
    @RequestWrapper(localName = "prepareToSnapshotVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.PrepareToSnapshotVirtualVolume")
    @WebMethod(action = "urn:prepareToSnapshotVirtualVolume")
    @ResponseWrapper(localName = "prepareToSnapshotVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.PrepareToSnapshotVirtualVolumeResponse")
    public com.emc.storageos.vasa.TaskInfo prepareToSnapshotVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolId,
        @WebParam(name = "storageProfile", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        com.emc.storageos.vasa.StorageProfile storageProfile,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie,
        @WebParam(name = "snapType", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String snapType
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, SnapshotTooMany_Exception, PermissionDenied_Exception, NotImplemented_Exception, ResourceInUse_Exception, OutOfResource_Exception, StorageFault_Exception, InvalidProfile_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryAssociatedCapabilityForFileSystem", output = "urn:queryAssociatedCapabilityForFileSystemResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryAssociatedCapabilityForFileSystemInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryAssociatedCapabilityForFileSystemInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryAssociatedCapabilityForFileSystemNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryAssociatedCapabilityForFileSystemStorageFault")})
    @RequestWrapper(localName = "queryAssociatedCapabilityForFileSystem", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedCapabilityForFileSystem")
    @WebMethod(action = "urn:queryAssociatedCapabilityForFileSystem")
    @ResponseWrapper(localName = "queryAssociatedCapabilityForFileSystemResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedCapabilityForFileSystemResponse")
    public java.util.List<com.emc.storageos.vasa.VasaAssociationObject> queryAssociatedCapabilityForFileSystem(
        @WebParam(name = "fsUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> fsUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:setStatisticsContext", output = "urn:setStatisticsContextResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:setStatisticsContextInactiveProvider"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:setStatisticsContextInvalidArgument"), @FaultAction(className = InvalidStatisticsContext_Exception.class, value = "urn:setStatisticsContextInvalidStatisticsContext"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:setStatisticsContextVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:setStatisticsContextInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:setStatisticsContextNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:setStatisticsContextStorageFault")})
    @WebMethod(action = "urn:setStatisticsContext")
    public void setStatisticsContext(
        @WebParam(partName = "parameters", name = "setStatisticsContext", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        SetStatisticsContext parameters
    ) throws InactiveProvider_Exception, InvalidArgument_Exception, InvalidStatisticsContext_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryAssociatedProcessorsForArray", output = "urn:queryAssociatedProcessorsForArrayResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryAssociatedProcessorsForArrayInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryAssociatedProcessorsForArrayInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryAssociatedProcessorsForArrayNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryAssociatedProcessorsForArrayStorageFault")})
    @RequestWrapper(localName = "queryAssociatedProcessorsForArray", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedProcessorsForArray")
    @WebMethod(action = "urn:queryAssociatedProcessorsForArray")
    @ResponseWrapper(localName = "queryAssociatedProcessorsForArrayResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedProcessorsForArrayResponse")
    public java.util.List<com.emc.storageos.vasa.VasaAssociationObject> queryAssociatedProcessorsForArray(
        @WebParam(name = "arrayUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> arrayUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryDRSMigrationCapabilityForPerformance", output = "urn:queryDRSMigrationCapabilityForPerformanceResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryDRSMigrationCapabilityForPerformanceInvalidSession"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryDRSMigrationCapabilityForPerformanceNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryDRSMigrationCapabilityForPerformanceInvalidArgument"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryDRSMigrationCapabilityForPerformanceStorageFault")})
    @RequestWrapper(localName = "queryDRSMigrationCapabilityForPerformance", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryDRSMigrationCapabilityForPerformance")
    @WebMethod(action = "urn:queryDRSMigrationCapabilityForPerformance")
    @ResponseWrapper(localName = "queryDRSMigrationCapabilityForPerformanceResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryDRSMigrationCapabilityForPerformanceResponse")
    public java.lang.Boolean queryDRSMigrationCapabilityForPerformance(
        @WebParam(name = "srcUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String srcUniqueId,
        @WebParam(name = "dstUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String dstUniqueId,
        @WebParam(name = "entityType", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String entityType
    ) throws InvalidSession_Exception, NotFound_Exception, InvalidArgument_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryDefaultProfileForStorageContainer", output = "urn:queryDefaultProfileForStorageContainerResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryDefaultProfileForStorageContainerInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryDefaultProfileForStorageContainerNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryDefaultProfileForStorageContainerInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryDefaultProfileForStorageContainerVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryDefaultProfileForStorageContainerInvalidSession"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryDefaultProfileForStorageContainerStorageFault")})
    @RequestWrapper(localName = "queryDefaultProfileForStorageContainer", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryDefaultProfileForStorageContainer")
    @WebMethod(action = "urn:queryDefaultProfileForStorageContainer")
    @ResponseWrapper(localName = "queryDefaultProfileForStorageContainerResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryDefaultProfileForStorageContainerResponse")
    public java.util.List<com.emc.storageos.vasa.DefaultProfile> queryDefaultProfileForStorageContainer(
        @WebParam(name = "containerId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerId,
        @WebParam(name = "entityType", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> entityType
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryUniqueIdentifiersForFileSystems", output = "urn:queryUniqueIdentifiersForFileSystemsResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryUniqueIdentifiersForFileSystemsInvalidSession"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryUniqueIdentifiersForFileSystemsNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryUniqueIdentifiersForFileSystemsInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryUniqueIdentifiersForFileSystemsNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryUniqueIdentifiersForFileSystemsStorageFault")})
    @RequestWrapper(localName = "queryUniqueIdentifiersForFileSystems", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryUniqueIdentifiersForFileSystems")
    @WebMethod(action = "urn:queryUniqueIdentifiersForFileSystems")
    @ResponseWrapper(localName = "queryUniqueIdentifiersForFileSystemsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryUniqueIdentifiersForFileSystemsResponse")
    public java.util.List<java.lang.String> queryUniqueIdentifiersForFileSystems(
        @WebParam(name = "fsUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String fsUniqueId
    ) throws InvalidSession_Exception, NotFound_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryAssociatedCapabilityForLun", output = "urn:queryAssociatedCapabilityForLunResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryAssociatedCapabilityForLunInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryAssociatedCapabilityForLunInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryAssociatedCapabilityForLunNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryAssociatedCapabilityForLunStorageFault")})
    @RequestWrapper(localName = "queryAssociatedCapabilityForLun", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedCapabilityForLun")
    @WebMethod(action = "urn:queryAssociatedCapabilityForLun")
    @ResponseWrapper(localName = "queryAssociatedCapabilityForLunResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedCapabilityForLunResponse")
    public java.util.List<com.emc.storageos.vasa.VasaAssociationObject> queryAssociatedCapabilityForLun(
        @WebParam(name = "lunUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> lunUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryAssociatedPortsForProcessor", output = "urn:queryAssociatedPortsForProcessorResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryAssociatedPortsForProcessorInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryAssociatedPortsForProcessorInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryAssociatedPortsForProcessorNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryAssociatedPortsForProcessorStorageFault")})
    @RequestWrapper(localName = "queryAssociatedPortsForProcessor", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedPortsForProcessor")
    @WebMethod(action = "urn:queryAssociatedPortsForProcessor")
    @ResponseWrapper(localName = "queryAssociatedPortsForProcessorResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedPortsForProcessorResponse")
    public java.util.List<com.emc.storageos.vasa.VasaAssociationObject> queryAssociatedPortsForProcessor(
        @WebParam(name = "spUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> spUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryUniqueIdentifiersForLuns", output = "urn:queryUniqueIdentifiersForLunsResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryUniqueIdentifiersForLunsInvalidSession"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryUniqueIdentifiersForLunsNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryUniqueIdentifiersForLunsInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryUniqueIdentifiersForLunsNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryUniqueIdentifiersForLunsStorageFault")})
    @RequestWrapper(localName = "queryUniqueIdentifiersForLuns", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryUniqueIdentifiersForLuns")
    @WebMethod(action = "urn:queryUniqueIdentifiersForLuns")
    @ResponseWrapper(localName = "queryUniqueIdentifiersForLunsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryUniqueIdentifiersForLunsResponse")
    public java.util.List<java.lang.String> queryUniqueIdentifiersForLuns(
        @WebParam(name = "arrayUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String arrayUniqueId
    ) throws InvalidSession_Exception, NotFound_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:registerVASACertificate", output = "urn:registerVASACertificateResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:registerVASACertificateInvalidSession"), @FaultAction(className = InvalidLogin_Exception.class, value = "urn:registerVASACertificateInvalidLogin"), @FaultAction(className = InvalidCertificate_Exception.class, value = "urn:registerVASACertificateInvalidCertificate"), @FaultAction(className = StorageFault_Exception.class, value = "urn:registerVASACertificateStorageFault")})
    @RequestWrapper(localName = "registerVASACertificate", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.RegisterVASACertificate")
    @WebMethod(action = "urn:registerVASACertificate")
    @ResponseWrapper(localName = "registerVASACertificateResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.RegisterVASACertificateResponse")
    public com.emc.storageos.vasa.VasaProviderInfo registerVASACertificate(
        @WebParam(name = "userName", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String userName,
        @WebParam(name = "password", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String password,
        @WebParam(name = "newCertificate", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String newCertificate
    ) throws InvalidSession_Exception, InvalidLogin_Exception, InvalidCertificate_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:revertVirtualVolume", output = "urn:revertVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:revertVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:revertVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:revertVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:revertVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:revertVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:revertVirtualVolumeInvalidSession"), @FaultAction(className = IncompatibleVolume_Exception.class, value = "urn:revertVirtualVolumeIncompatibleVolume"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:revertVirtualVolumePermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:revertVirtualVolumeNotImplemented"), @FaultAction(className = ResourceInUse_Exception.class, value = "urn:revertVirtualVolumeResourceInUse"), @FaultAction(className = StorageFault_Exception.class, value = "urn:revertVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "revertVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.RevertVirtualVolume")
    @WebMethod(action = "urn:revertVirtualVolume")
    @ResponseWrapper(localName = "revertVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.RevertVirtualVolumeResponse")
    public com.emc.storageos.vasa.TaskInfo revertVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolId,
        @WebParam(name = "snapshotVvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String snapshotVvolId,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, IncompatibleVolume_Exception, PermissionDenied_Exception, NotImplemented_Exception, ResourceInUse_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "queryCACertificatesResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", partName = "parameters")
    @Action(input = "urn:queryCACertificates", output = "urn:queryCACertificatesResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryCACertificatesInvalidSession"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryCACertificatesVasaProviderBusy"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryCACertificatesStorageFault")})
    @WebMethod(action = "urn:queryCACertificates")
    public QueryCACertificatesResponse queryCACertificates() throws InvalidSession_Exception, VasaProviderBusy_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:createVirtualVolume", output = "urn:createVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:createVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:createVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:createVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:createVirtualVolumeVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:createVirtualVolumeInvalidSession"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:createVirtualVolumePermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:createVirtualVolumeNotImplemented"), @FaultAction(className = OutOfResource_Exception.class, value = "urn:createVirtualVolumeOutOfResource"), @FaultAction(className = StorageFault_Exception.class, value = "urn:createVirtualVolumeStorageFault"), @FaultAction(className = InvalidProfile_Exception.class, value = "urn:createVirtualVolumeInvalidProfile")})
    @RequestWrapper(localName = "createVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.CreateVirtualVolume")
    @WebMethod(action = "urn:createVirtualVolume")
    @ResponseWrapper(localName = "createVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.CreateVirtualVolumeResponse")
    public com.emc.storageos.vasa.TaskInfo createVirtualVolume(
        @WebParam(name = "containerId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerId,
        @WebParam(name = "vvolType", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolType,
        @WebParam(name = "storageProfile", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        com.emc.storageos.vasa.StorageProfile storageProfile,
        @WebParam(name = "sizeInMB", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long sizeInMB,
        @WebParam(name = "metadata", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<com.emc.storageos.vasa.NameValuePair> metadata,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, PermissionDenied_Exception, NotImplemented_Exception, OutOfResource_Exception, StorageFault_Exception, InvalidProfile_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:unbindVirtualVolumeFromAllHost", output = "urn:unbindVirtualVolumeFromAllHostResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:unbindVirtualVolumeFromAllHostInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:unbindVirtualVolumeFromAllHostNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:unbindVirtualVolumeFromAllHostInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:unbindVirtualVolumeFromAllHostVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:unbindVirtualVolumeFromAllHostInvalidSession"), @FaultAction(className = TooMany_Exception.class, value = "urn:unbindVirtualVolumeFromAllHostTooMany"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:unbindVirtualVolumeFromAllHostNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:unbindVirtualVolumeFromAllHostStorageFault")})
    @RequestWrapper(localName = "unbindVirtualVolumeFromAllHost", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UnbindVirtualVolumeFromAllHost")
    @WebMethod(action = "urn:unbindVirtualVolumeFromAllHost")
    @ResponseWrapper(localName = "unbindVirtualVolumeFromAllHostResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UnbindVirtualVolumeFromAllHostResponse")
    public java.util.List<com.emc.storageos.vasa.BatchReturnStatus> unbindVirtualVolumeFromAllHost(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> vvolId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, TooMany_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:spaceStatsForStorageContainer", output = "urn:spaceStatsForStorageContainerResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:spaceStatsForStorageContainerInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:spaceStatsForStorageContainerNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:spaceStatsForStorageContainerInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:spaceStatsForStorageContainerVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:spaceStatsForStorageContainerInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:spaceStatsForStorageContainerNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:spaceStatsForStorageContainerStorageFault")})
    @RequestWrapper(localName = "spaceStatsForStorageContainer", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SpaceStatsForStorageContainer")
    @WebMethod(action = "urn:spaceStatsForStorageContainer")
    @ResponseWrapper(localName = "spaceStatsForStorageContainerResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SpaceStatsForStorageContainerResponse")
    public java.util.List<com.emc.storageos.vasa.ContainerSpaceStats> spaceStatsForStorageContainer(
        @WebParam(name = "containerId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerId,
        @WebParam(name = "capabilityProfileId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> capabilityProfileId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:bindVirtualVolume", output = "urn:bindVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:bindVirtualVolumeInactiveProvider"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:bindVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:bindVirtualVolumeVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:bindVirtualVolumeInvalidSession"), @FaultAction(className = TooMany_Exception.class, value = "urn:bindVirtualVolumeTooMany"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:bindVirtualVolumePermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:bindVirtualVolumeNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:bindVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "bindVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.BindVirtualVolume")
    @WebMethod(action = "urn:bindVirtualVolume")
    @ResponseWrapper(localName = "bindVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.BindVirtualVolumeResponse")
    public java.util.List<com.emc.storageos.vasa.BatchVirtualVolumeHandleResult> bindVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> vvolId,
        @WebParam(name = "bindContext", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String bindContext,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie
    ) throws InactiveProvider_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, TooMany_Exception, PermissionDenied_Exception, NotImplemented_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:deleteVirtualVolume", output = "urn:deleteVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:deleteVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:deleteVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:deleteVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:deleteVirtualVolumeVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:deleteVirtualVolumeInvalidSession"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:deleteVirtualVolumePermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:deleteVirtualVolumeNotImplemented"), @FaultAction(className = ResourceInUse_Exception.class, value = "urn:deleteVirtualVolumeResourceInUse"), @FaultAction(className = StorageFault_Exception.class, value = "urn:deleteVirtualVolumeStorageFault")})
    @WebMethod(action = "urn:deleteVirtualVolume")
    public void deleteVirtualVolume(
        @WebParam(partName = "parameters", name = "deleteVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        DeleteVirtualVolume parameters
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, PermissionDenied_Exception, NotImplemented_Exception, ResourceInUse_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "queryCatalogResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", partName = "parameters")
    @Action(input = "urn:queryCatalog", output = "urn:queryCatalogResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryCatalogInvalidSession"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryCatalogStorageFault")})
    @WebMethod(action = "urn:queryCatalog")
    public QueryCatalogResponse queryCatalog() throws InvalidSession_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:getNumberOfEntities", output = "urn:getNumberOfEntitiesResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:getNumberOfEntitiesInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:getNumberOfEntitiesInvalidArgument"), @FaultAction(className = StorageFault_Exception.class, value = "urn:getNumberOfEntitiesStorageFault")})
    @RequestWrapper(localName = "getNumberOfEntities", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetNumberOfEntities")
    @WebMethod(action = "urn:getNumberOfEntities")
    @ResponseWrapper(localName = "getNumberOfEntitiesResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetNumberOfEntitiesResponse")
    public java.lang.Integer getNumberOfEntities(
        @WebParam(name = "entityType", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String entityType
    ) throws InvalidSession_Exception, InvalidArgument_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:activateProvider", output = "urn:activateProviderResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:activateProviderInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:activateProviderInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:activateProviderVasaProviderBusy"), @FaultAction(className = StorageFault_Exception.class, value = "urn:activateProviderStorageFault")})
    @WebMethod(action = "urn:activateProvider")
    public void activateProvider(
        @WebParam(partName = "parameters", name = "activateProvider", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        ActivateProvider parameters
    ) throws InvalidSession_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:updateVirtualVolumeMetaData", output = "urn:updateVirtualVolumeMetaDataResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:updateVirtualVolumeMetaDataInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:updateVirtualVolumeMetaDataNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:updateVirtualVolumeMetaDataInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:updateVirtualVolumeMetaDataVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:updateVirtualVolumeMetaDataInvalidSession"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:updateVirtualVolumeMetaDataPermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:updateVirtualVolumeMetaDataNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:updateVirtualVolumeMetaDataStorageFault")})
    @WebMethod(action = "urn:updateVirtualVolumeMetaData")
    public void updateVirtualVolumeMetaData(
        @WebParam(partName = "parameters", name = "updateVirtualVolumeMetaData", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        UpdateVirtualVolumeMetaData parameters
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, PermissionDenied_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:snapshotVirtualVolume", output = "urn:snapshotVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:snapshotVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:snapshotVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:snapshotVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:snapshotVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:snapshotVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:snapshotVirtualVolumeInvalidSession"), @FaultAction(className = TooMany_Exception.class, value = "urn:snapshotVirtualVolumeTooMany"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:snapshotVirtualVolumePermissionDenied"), @FaultAction(className = Timeout_Exception.class, value = "urn:snapshotVirtualVolumeTimeout"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:snapshotVirtualVolumeNotImplemented"), @FaultAction(className = ResourceInUse_Exception.class, value = "urn:snapshotVirtualVolumeResourceInUse"), @FaultAction(className = StorageFault_Exception.class, value = "urn:snapshotVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "snapshotVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SnapshotVirtualVolume")
    @WebMethod(action = "urn:snapshotVirtualVolume")
    @ResponseWrapper(localName = "snapshotVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SnapshotVirtualVolumeResponse")
    public java.util.List<com.emc.storageos.vasa.BatchReturnStatus> snapshotVirtualVolume(
        @WebParam(name = "snapshotInfo", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<com.emc.storageos.vasa.VirtualVolumeInfo> snapshotInfo,
        @WebParam(name = "timeoutMS", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long timeoutMS,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, TooMany_Exception, PermissionDenied_Exception, Timeout_Exception, NotImplemented_Exception, ResourceInUse_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:cancelBindingChange", output = "urn:cancelBindingChangeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:cancelBindingChangeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:cancelBindingChangeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:cancelBindingChangeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:cancelBindingChangeVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:cancelBindingChangeInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:cancelBindingChangeNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:cancelBindingChangeStorageFault")})
    @RequestWrapper(localName = "cancelBindingChange", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.CancelBindingChange")
    @WebMethod(action = "urn:cancelBindingChange")
    @ResponseWrapper(localName = "cancelBindingChangeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.CancelBindingChangeResponse")
    public java.util.List<com.emc.storageos.vasa.BatchReturnStatus> cancelBindingChange(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> vvolId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryVirtualVolumeInfo", output = "urn:queryVirtualVolumeInfoResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryVirtualVolumeInfoInactiveProvider"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryVirtualVolumeInfoVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryVirtualVolumeInfoInvalidSession"), @FaultAction(className = TooMany_Exception.class, value = "urn:queryVirtualVolumeInfoTooMany"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryVirtualVolumeInfoNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryVirtualVolumeInfoStorageFault")})
    @RequestWrapper(localName = "queryVirtualVolumeInfo", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryVirtualVolumeInfo")
    @WebMethod(action = "urn:queryVirtualVolumeInfo")
    @ResponseWrapper(localName = "queryVirtualVolumeInfoResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryVirtualVolumeInfoResponse")
    public java.util.List<com.emc.storageos.vasa.VirtualVolumeInfo> queryVirtualVolumeInfo(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> vvolId
    ) throws InactiveProvider_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, TooMany_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryDrsMigrationCapabilityForPerformanceEx", output = "urn:queryDrsMigrationCapabilityForPerformanceExResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryDrsMigrationCapabilityForPerformanceExInactiveProvider"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryDrsMigrationCapabilityForPerformanceExInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryDrsMigrationCapabilityForPerformanceExVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryDrsMigrationCapabilityForPerformanceExInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryDrsMigrationCapabilityForPerformanceExNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryDrsMigrationCapabilityForPerformanceExStorageFault")})
    @RequestWrapper(localName = "queryDrsMigrationCapabilityForPerformanceEx", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryDrsMigrationCapabilityForPerformanceEx")
    @WebMethod(action = "urn:queryDrsMigrationCapabilityForPerformanceEx")
    @ResponseWrapper(localName = "queryDrsMigrationCapabilityForPerformanceExResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryDrsMigrationCapabilityForPerformanceExResponse")
    public com.emc.storageos.vasa.StorageDrsMigrationCapabilityResult queryDrsMigrationCapabilityForPerformanceEx(
        @WebParam(name = "entityId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> entityId
    ) throws InactiveProvider_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:unsharedBitmapVirtualVolume", output = "urn:unsharedBitmapVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:unsharedBitmapVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:unsharedBitmapVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:unsharedBitmapVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:unsharedBitmapVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:unsharedBitmapVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:unsharedBitmapVirtualVolumeInvalidSession"), @FaultAction(className = IncompatibleVolume_Exception.class, value = "urn:unsharedBitmapVirtualVolumeIncompatibleVolume"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:unsharedBitmapVirtualVolumeNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:unsharedBitmapVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "unsharedBitmapVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UnsharedBitmapVirtualVolume")
    @WebMethod(action = "urn:unsharedBitmapVirtualVolume")
    @ResponseWrapper(localName = "unsharedBitmapVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UnsharedBitmapVirtualVolumeResponse")
    public com.emc.storageos.vasa.VirtualVolumeBitmapResult unsharedBitmapVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolId,
        @WebParam(name = "baseVvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String baseVvolId,
        @WebParam(name = "segmentStartOffsetBytes", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long segmentStartOffsetBytes,
        @WebParam(name = "segmentLengthBytes", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long segmentLengthBytes,
        @WebParam(name = "chunkSizeBytes", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long chunkSizeBytes
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, IncompatibleVolume_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryAssociatedStatisticsForEntity", output = "urn:queryAssociatedStatisticsForEntityResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryAssociatedStatisticsForEntityInactiveProvider"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryAssociatedStatisticsForEntityInvalidArgument"), @FaultAction(className = InvalidStatisticsContext_Exception.class, value = "urn:queryAssociatedStatisticsForEntityInvalidStatisticsContext"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryAssociatedStatisticsForEntityVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryAssociatedStatisticsForEntityInvalidSession"), @FaultAction(className = TooMany_Exception.class, value = "urn:queryAssociatedStatisticsForEntityTooMany"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryAssociatedStatisticsForEntityNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryAssociatedStatisticsForEntityStorageFault")})
    @RequestWrapper(localName = "queryAssociatedStatisticsForEntity", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedStatisticsForEntity")
    @WebMethod(action = "urn:queryAssociatedStatisticsForEntity")
    @ResponseWrapper(localName = "queryAssociatedStatisticsForEntityResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryAssociatedStatisticsForEntityResponse")
    public java.util.List<com.emc.storageos.vasa.AssociatedStatistics> queryAssociatedStatisticsForEntity(
        @WebParam(name = "entityTypeName", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String entityTypeName,
        @WebParam(name = "entityId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> entityId
    ) throws InactiveProvider_Exception, InvalidArgument_Exception, InvalidStatisticsContext_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, TooMany_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:getCurrentTask", output = "urn:getCurrentTaskResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:getCurrentTaskInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:getCurrentTaskNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:getCurrentTaskInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:getCurrentTaskVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:getCurrentTaskInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:getCurrentTaskNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:getCurrentTaskStorageFault")})
    @RequestWrapper(localName = "getCurrentTask", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetCurrentTask")
    @WebMethod(action = "urn:getCurrentTask")
    @ResponseWrapper(localName = "getCurrentTaskResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetCurrentTaskResponse")
    public java.util.List<com.emc.storageos.vasa.TaskInfo> getCurrentTask(
        @WebParam(name = "arrayId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String arrayId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryStorageCapabilities", output = "urn:queryStorageCapabilitiesResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryStorageCapabilitiesInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryStorageCapabilitiesInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryStorageCapabilitiesNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryStorageCapabilitiesStorageFault")})
    @RequestWrapper(localName = "queryStorageCapabilities", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageCapabilities")
    @WebMethod(action = "urn:queryStorageCapabilities")
    @ResponseWrapper(localName = "queryStorageCapabilitiesResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageCapabilitiesResponse")
    public java.util.List<com.emc.storageos.vasa.StorageCapability> queryStorageCapabilities(
        @WebParam(name = "capabilityUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> capabilityUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryArrays", output = "urn:queryArraysResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryArraysInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryArraysInvalidArgument"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryArraysStorageFault")})
    @RequestWrapper(localName = "queryArrays", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryArrays")
    @WebMethod(action = "urn:queryArrays")
    @ResponseWrapper(localName = "queryArraysResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryArraysResponse")
    public java.util.List<com.emc.storageos.vasa.StorageArray> queryArrays(
        @WebParam(name = "arrayUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> arrayUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "requestCSRResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", partName = "parameters")
    @Action(input = "urn:requestCSR", output = "urn:requestCSRResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:requestCSRInvalidSession"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:requestCSRPermissionDenied"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:requestCSRVasaProviderBusy"), @FaultAction(className = StorageFault_Exception.class, value = "urn:requestCSRStorageFault")})
    @WebMethod(action = "urn:requestCSR")
    public RequestCSRResponse requestCSR() throws InvalidSession_Exception, PermissionDenied_Exception, VasaProviderBusy_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:registerCASignedProviderCertificate", output = "urn:registerCASignedProviderCertificateResponse", fault = {@FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:registerCASignedProviderCertificateVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:registerCASignedProviderCertificateInvalidSession"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:registerCASignedProviderCertificatePermissionDenied"), @FaultAction(className = InvalidCertificate_Exception.class, value = "urn:registerCASignedProviderCertificateInvalidCertificate"), @FaultAction(className = StorageFault_Exception.class, value = "urn:registerCASignedProviderCertificateStorageFault")})
    @WebMethod(action = "urn:registerCASignedProviderCertificate")
    public void registerCASignedProviderCertificate(
        @WebParam(partName = "parameters", name = "registerCASignedProviderCertificate", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        RegisterCASignedProviderCertificate parameters
    ) throws VasaProviderBusy_Exception, InvalidSession_Exception, PermissionDenied_Exception, InvalidCertificate_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:cloneVirtualVolume", output = "urn:cloneVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:cloneVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:cloneVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:cloneVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:cloneVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:cloneVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:cloneVirtualVolumeInvalidSession"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:cloneVirtualVolumePermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:cloneVirtualVolumeNotImplemented"), @FaultAction(className = ResourceInUse_Exception.class, value = "urn:cloneVirtualVolumeResourceInUse"), @FaultAction(className = OutOfResource_Exception.class, value = "urn:cloneVirtualVolumeOutOfResource"), @FaultAction(className = StorageFault_Exception.class, value = "urn:cloneVirtualVolumeStorageFault"), @FaultAction(className = InvalidProfile_Exception.class, value = "urn:cloneVirtualVolumeInvalidProfile")})
    @RequestWrapper(localName = "cloneVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.CloneVirtualVolume")
    @WebMethod(action = "urn:cloneVirtualVolume")
    @ResponseWrapper(localName = "cloneVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.CloneVirtualVolumeResponse")
    public com.emc.storageos.vasa.TaskInfo cloneVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolId,
        @WebParam(name = "newContainerId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String newContainerId,
        @WebParam(name = "newProfile", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        com.emc.storageos.vasa.StorageProfile newProfile,
        @WebParam(name = "metadata", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<com.emc.storageos.vasa.NameValuePair> metadata,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, PermissionDenied_Exception, NotImplemented_Exception, ResourceInUse_Exception, OutOfResource_Exception, StorageFault_Exception, InvalidProfile_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:fastCloneVirtualVolume", output = "urn:fastCloneVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:fastCloneVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:fastCloneVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:fastCloneVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:fastCloneVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:fastCloneVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:fastCloneVirtualVolumeInvalidSession"), @FaultAction(className = SnapshotTooMany_Exception.class, value = "urn:fastCloneVirtualVolumeSnapshotTooMany"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:fastCloneVirtualVolumePermissionDenied"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:fastCloneVirtualVolumeNotImplemented"), @FaultAction(className = ResourceInUse_Exception.class, value = "urn:fastCloneVirtualVolumeResourceInUse"), @FaultAction(className = OutOfResource_Exception.class, value = "urn:fastCloneVirtualVolumeOutOfResource"), @FaultAction(className = StorageFault_Exception.class, value = "urn:fastCloneVirtualVolumeStorageFault"), @FaultAction(className = InvalidProfile_Exception.class, value = "urn:fastCloneVirtualVolumeInvalidProfile")})
    @RequestWrapper(localName = "fastCloneVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.FastCloneVirtualVolume")
    @WebMethod(action = "urn:fastCloneVirtualVolume")
    @ResponseWrapper(localName = "fastCloneVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.FastCloneVirtualVolumeResponse")
    public com.emc.storageos.vasa.TaskInfo fastCloneVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolId,
        @WebParam(name = "newProfile", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        com.emc.storageos.vasa.StorageProfile newProfile,
        @WebParam(name = "metadata", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<com.emc.storageos.vasa.NameValuePair> metadata,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, SnapshotTooMany_Exception, PermissionDenied_Exception, NotImplemented_Exception, ResourceInUse_Exception, OutOfResource_Exception, StorageFault_Exception, InvalidProfile_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryStorageContainer", output = "urn:queryStorageContainerResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryStorageContainerInvalidSession"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryStorageContainerVasaProviderBusy"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryStorageContainerNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryStorageContainerStorageFault")})
    @RequestWrapper(localName = "queryStorageContainer", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageContainer")
    @WebMethod(action = "urn:queryStorageContainer")
    @ResponseWrapper(localName = "queryStorageContainerResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageContainerResponse")
    public java.util.List<com.emc.storageos.vasa.StorageContainer> queryStorageContainer(
        @WebParam(name = "containerId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> containerId
    ) throws InvalidSession_Exception, VasaProviderBusy_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:setStorageContainerContext", output = "urn:setStorageContainerContextResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:setStorageContainerContextInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:setStorageContainerContextNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:setStorageContainerContextInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:setStorageContainerContextVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:setStorageContainerContextInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:setStorageContainerContextNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:setStorageContainerContextStorageFault")})
    @RequestWrapper(localName = "setStorageContainerContext", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SetStorageContainerContext")
    @WebMethod(action = "urn:setStorageContainerContext")
    @ResponseWrapper(localName = "setStorageContainerContextResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SetStorageContainerContextResponse")
    public java.lang.String setStorageContainerContext(
        @WebParam(name = "containerId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerId,
        @WebParam(name = "userId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String userId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:spaceStatsForVirtualVolume", output = "urn:spaceStatsForVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:spaceStatsForVirtualVolumeInactiveProvider"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:spaceStatsForVirtualVolumeVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:spaceStatsForVirtualVolumeInvalidSession"), @FaultAction(className = TooMany_Exception.class, value = "urn:spaceStatsForVirtualVolumeTooMany"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:spaceStatsForVirtualVolumeNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:spaceStatsForVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "spaceStatsForVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SpaceStatsForVirtualVolume")
    @WebMethod(action = "urn:spaceStatsForVirtualVolume")
    @ResponseWrapper(localName = "spaceStatsForVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SpaceStatsForVirtualVolumeResponse")
    public java.util.List<com.emc.storageos.vasa.SpaceStats> spaceStatsForVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> vvolId
    ) throws InactiveProvider_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, TooMany_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:registerCACertificatesAndCRLs", output = "urn:registerCACertificatesAndCRLsResponse", fault = {@FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:registerCACertificatesAndCRLsVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:registerCACertificatesAndCRLsInvalidSession"), @FaultAction(className = InvalidLogin_Exception.class, value = "urn:registerCACertificatesAndCRLsInvalidLogin"), @FaultAction(className = InvalidCertificate_Exception.class, value = "urn:registerCACertificatesAndCRLsInvalidCertificate"), @FaultAction(className = StorageFault_Exception.class, value = "urn:registerCACertificatesAndCRLsStorageFault")})
    @RequestWrapper(localName = "registerCACertificatesAndCRLs", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.RegisterCACertificatesAndCRLs")
    @WebMethod(action = "urn:registerCACertificatesAndCRLs")
    @ResponseWrapper(localName = "registerCACertificatesAndCRLsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.RegisterCACertificatesAndCRLsResponse")
    public com.emc.storageos.vasa.VasaProviderInfo registerCACertificatesAndCRLs(
        @WebParam(name = "providerUserName", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String providerUserName,
        @WebParam(name = "providerPassword", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String providerPassword,
        @WebParam(name = "caRootCert", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> caRootCert,
        @WebParam(name = "caCRL", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> caCRL
    ) throws VasaProviderBusy_Exception, InvalidSession_Exception, InvalidLogin_Exception, InvalidCertificate_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryStoragePorts", output = "urn:queryStoragePortsResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryStoragePortsInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryStoragePortsInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryStoragePortsNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryStoragePortsStorageFault")})
    @RequestWrapper(localName = "queryStoragePorts", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStoragePorts")
    @WebMethod(action = "urn:queryStoragePorts")
    @ResponseWrapper(localName = "queryStoragePortsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStoragePortsResponse")
    public java.util.List<com.emc.storageos.vasa.StoragePort> queryStoragePorts(
        @WebParam(name = "portUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> portUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:unbindVirtualVolume", output = "urn:unbindVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:unbindVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:unbindVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:unbindVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:unbindVirtualVolumeVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:unbindVirtualVolumeInvalidSession"), @FaultAction(className = TooMany_Exception.class, value = "urn:unbindVirtualVolumeTooMany"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:unbindVirtualVolumeNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:unbindVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "unbindVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UnbindVirtualVolume")
    @WebMethod(action = "urn:unbindVirtualVolume")
    @ResponseWrapper(localName = "unbindVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UnbindVirtualVolumeResponse")
    public java.util.List<com.emc.storageos.vasa.BatchReturnStatus> unbindVirtualVolume(
        @WebParam(name = "vvolHandle", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<com.emc.storageos.vasa.VirtualVolumeHandle> vvolHandle,
        @WebParam(name = "unbindContext", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String unbindContext
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, TooMany_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryStorageLuns", output = "urn:queryStorageLunsResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryStorageLunsInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryStorageLunsInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryStorageLunsNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryStorageLunsStorageFault")})
    @RequestWrapper(localName = "queryStorageLuns", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageLuns")
    @WebMethod(action = "urn:queryStorageLuns")
    @ResponseWrapper(localName = "queryStorageLunsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageLunsResponse")
    public java.util.List<com.emc.storageos.vasa.StorageLun> queryStorageLuns(
        @WebParam(name = "lunUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> lunUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:unbindAllVirtualVolumesFromHost", output = "urn:unbindAllVirtualVolumesFromHostResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:unbindAllVirtualVolumesFromHostInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:unbindAllVirtualVolumesFromHostNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:unbindAllVirtualVolumesFromHostInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:unbindAllVirtualVolumesFromHostVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:unbindAllVirtualVolumesFromHostInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:unbindAllVirtualVolumesFromHostNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:unbindAllVirtualVolumesFromHostStorageFault")})
    @WebMethod(action = "urn:unbindAllVirtualVolumesFromHost")
    public void unbindAllVirtualVolumesFromHost(
        @WebParam(partName = "parameters", name = "unbindAllVirtualVolumesFromHost", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        UnbindAllVirtualVolumesFromHost parameters
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:getAlarms", output = "urn:getAlarmsResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:getAlarmsInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:getAlarmsInvalidArgument"), @FaultAction(className = StorageFault_Exception.class, value = "urn:getAlarmsStorageFault"), @FaultAction(className = LostAlarm_Exception.class, value = "urn:getAlarmsLostAlarm")})
    @RequestWrapper(localName = "getAlarms", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetAlarms")
    @WebMethod(action = "urn:getAlarms")
    @ResponseWrapper(localName = "getAlarmsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetAlarmsResponse")
    public java.util.List<com.emc.storageos.vasa.StorageAlarm> getAlarms(
        @WebParam(name = "lastAlarmId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.Long lastAlarmId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, StorageFault_Exception, LostAlarm_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryStorageContainerForArray", output = "urn:queryStorageContainerForArrayResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryStorageContainerForArrayInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryStorageContainerForArrayNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryStorageContainerForArrayInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryStorageContainerForArrayVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryStorageContainerForArrayInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryStorageContainerForArrayNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryStorageContainerForArrayStorageFault")})
    @RequestWrapper(localName = "queryStorageContainerForArray", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageContainerForArray")
    @WebMethod(action = "urn:queryStorageContainerForArray")
    @ResponseWrapper(localName = "queryStorageContainerForArrayResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageContainerForArrayResponse")
    public java.util.List<java.lang.String> queryStorageContainerForArray(
        @WebParam(name = "arrayId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String arrayId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:setContext", output = "urn:setContextResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:setContextInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:setContextInvalidArgument"), @FaultAction(className = StorageFault_Exception.class, value = "urn:setContextStorageFault")})
    @RequestWrapper(localName = "setContext", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SetContext")
    @WebMethod(action = "urn:setContext")
    @ResponseWrapper(localName = "setContextResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.SetContextResponse")
    public com.emc.storageos.vasa.VasaProviderInfo setContext(
        @WebParam(name = "usageContext", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        com.emc.storageos.vasa.UsageContext usageContext
    ) throws InvalidSession_Exception, InvalidArgument_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryStorageFileSystems", output = "urn:queryStorageFileSystemsResponse", fault = {@FaultAction(className = InvalidSession_Exception.class, value = "urn:queryStorageFileSystemsInvalidSession"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryStorageFileSystemsInvalidArgument"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:queryStorageFileSystemsNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryStorageFileSystemsStorageFault")})
    @RequestWrapper(localName = "queryStorageFileSystems", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageFileSystems")
    @WebMethod(action = "urn:queryStorageFileSystems")
    @ResponseWrapper(localName = "queryStorageFileSystemsResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryStorageFileSystemsResponse")
    public java.util.List<com.emc.storageos.vasa.StorageFileSystem> queryStorageFileSystems(
        @WebParam(name = "fsUniqueId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<java.lang.String> fsUniqueId
    ) throws InvalidSession_Exception, InvalidArgument_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:queryComplianceResult", output = "urn:queryComplianceResultResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:queryComplianceResultInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:queryComplianceResultNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:queryComplianceResultInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:queryComplianceResultVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:queryComplianceResultInvalidSession"), @FaultAction(className = StorageFault_Exception.class, value = "urn:queryComplianceResultStorageFault")})
    @RequestWrapper(localName = "queryComplianceResult", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryComplianceResult")
    @WebMethod(action = "urn:queryComplianceResult")
    @ResponseWrapper(localName = "queryComplianceResultResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.QueryComplianceResultResponse")
    public java.util.List<com.emc.storageos.vasa.ComplianceResult> queryComplianceResult(
        @WebParam(name = "compliance", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.util.List<com.emc.storageos.vasa.ComplianceSubject> compliance
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:updateStorageProfileForVirtualVolume", output = "urn:updateStorageProfileForVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:updateStorageProfileForVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:updateStorageProfileForVirtualVolumeNotFound"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:updateStorageProfileForVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:updateStorageProfileForVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:updateStorageProfileForVirtualVolumeInvalidSession"), @FaultAction(className = PermissionDenied_Exception.class, value = "urn:updateStorageProfileForVirtualVolumePermissionDenied"), @FaultAction(className = ResourceInUse_Exception.class, value = "urn:updateStorageProfileForVirtualVolumeResourceInUse"), @FaultAction(className = OutOfResource_Exception.class, value = "urn:updateStorageProfileForVirtualVolumeOutOfResource"), @FaultAction(className = StorageFault_Exception.class, value = "urn:updateStorageProfileForVirtualVolumeStorageFault"), @FaultAction(className = InvalidProfile_Exception.class, value = "urn:updateStorageProfileForVirtualVolumeInvalidProfile")})
    @RequestWrapper(localName = "updateStorageProfileForVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UpdateStorageProfileForVirtualVolume")
    @WebMethod(action = "urn:updateStorageProfileForVirtualVolume")
    @ResponseWrapper(localName = "updateStorageProfileForVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.UpdateStorageProfileForVirtualVolumeResponse")
    public com.emc.storageos.vasa.TaskInfo updateStorageProfileForVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolId,
        @WebParam(name = "newStorageProfile", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        com.emc.storageos.vasa.StorageProfile newStorageProfile,
        @WebParam(name = "containerCookie", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String containerCookie
    ) throws InactiveProvider_Exception, NotFound_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, PermissionDenied_Exception, ResourceInUse_Exception, OutOfResource_Exception, StorageFault_Exception, InvalidProfile_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:allocatedBitmapVirtualVolume", output = "urn:allocatedBitmapVirtualVolumeResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:allocatedBitmapVirtualVolumeInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:allocatedBitmapVirtualVolumeNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:allocatedBitmapVirtualVolumeInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:allocatedBitmapVirtualVolumeVasaProviderBusy"), @FaultAction(className = NotSupported_Exception.class, value = "urn:allocatedBitmapVirtualVolumeNotSupported"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:allocatedBitmapVirtualVolumeInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:allocatedBitmapVirtualVolumeNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:allocatedBitmapVirtualVolumeStorageFault")})
    @RequestWrapper(localName = "allocatedBitmapVirtualVolume", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.AllocatedBitmapVirtualVolume")
    @WebMethod(action = "urn:allocatedBitmapVirtualVolume")
    @ResponseWrapper(localName = "allocatedBitmapVirtualVolumeResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.AllocatedBitmapVirtualVolumeResponse")
    public com.emc.storageos.vasa.VirtualVolumeBitmapResult allocatedBitmapVirtualVolume(
        @WebParam(name = "vvolId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String vvolId,
        @WebParam(name = "segmentStartOffsetBytes", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long segmentStartOffsetBytes,
        @WebParam(name = "segmentLengthBytes", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long segmentLengthBytes,
        @WebParam(name = "chunkSizeBytes", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        long chunkSizeBytes
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, NotSupported_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;

    @WebResult(name = "return", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
    @Action(input = "urn:getTaskUpdate", output = "urn:getTaskUpdateResponse", fault = {@FaultAction(className = InactiveProvider_Exception.class, value = "urn:getTaskUpdateInactiveProvider"), @FaultAction(className = NotFound_Exception.class, value = "urn:getTaskUpdateNotFound"), @FaultAction(className = InvalidArgument_Exception.class, value = "urn:getTaskUpdateInvalidArgument"), @FaultAction(className = VasaProviderBusy_Exception.class, value = "urn:getTaskUpdateVasaProviderBusy"), @FaultAction(className = InvalidSession_Exception.class, value = "urn:getTaskUpdateInvalidSession"), @FaultAction(className = NotImplemented_Exception.class, value = "urn:getTaskUpdateNotImplemented"), @FaultAction(className = StorageFault_Exception.class, value = "urn:getTaskUpdateStorageFault")})
    @RequestWrapper(localName = "getTaskUpdate", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetTaskUpdate")
    @WebMethod(action = "urn:getTaskUpdate")
    @ResponseWrapper(localName = "getTaskUpdateResponse", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd", className = "com.emc.storageos.vasa.GetTaskUpdateResponse")
    public com.emc.storageos.vasa.TaskInfo getTaskUpdate(
        @WebParam(name = "taskId", targetNamespace = "http://com.vmware.vim.vasa/2.0/xsd")
        java.lang.String taskId
    ) throws InactiveProvider_Exception, NotFound_Exception, InvalidArgument_Exception, VasaProviderBusy_Exception, InvalidSession_Exception, NotImplemented_Exception, StorageFault_Exception;
}

#!/bin/sh
#
# Copyright (c) 2012 EMC Corporation
# All Rights Reserved
#
# This software contains the intellectual property of EMC Corporation
# or is licensed to EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of EMC.
#
# /etc/init.d/boot.ovfenv
#
# Boot time script to populate timezone and network configuration files
# using parameters provided in ovf-env.xml 
#
### BEGIN INIT INFO
# Provides:          boot.ovfenv
# Required-Start:    boot.localfs
# Required-Stop:
# Should-Stop:
# Default-Start:     B
# Default-Stop:
# Description:       Initialize configuration files using ovf-env.xml
### END INIT INFO

# Source /etc/sysconfig/storageos 
#
STORAGEOS_SYSCONFIG=${STORAGEOS_SYSCONFIG:-'/etc/sysconfig/storageos'}
test -r "${STORAGEOS_SYSCONFIG}"       || exit 6
. ${STORAGEOS_SYSCONFIG}

. /etc/rc.status

rc_reset

_checkConfigurable() {
    /etc/getovfproperties --is-vapp
    if [ $? -eq 0 ]; then
        echo -e "\n\e[1;31m***\n*** VMware vApp network configuration can not be altered using ViPR Installer.\n*** Please power off the vApp and use vSphere Client to edit network properties.\n***\n*** Press any key to power off this VM\n***\e[0m"
        read -n 1
        /etc/systool --poweroff
        exit
    fi
}

_isIPConsistent() {
    declare -A vdcpropMap
    vdcprops=$(/etc/systool --getvdcprops)
    while read -r line
    do
      IFS='=' read -ra pair <<< "$line"
      vdcpropMap[${pair[0]}]=${pair[1]}
    done <<< "$vdcprops"
    
    declare -A ovfenvpropMap
    ovfenvprops=$(/etc/getovfproperties --readCDROM)
    while read -r line
    do
      IFS='=' read -ra pair <<< "$line"
      ovfenvpropMap[${pair[0]}]=${pair[1]}
    done <<< "$ovfenvprops"
    
    site_myid=${vdcpropMap["site_myid"]}
    
    declare node_count=0
    node_count=$((${ovfenvpropMap["node_count"]}))
    declare node_index=0
    while [ $node_index -lt $node_count ]; do
      node_index=$(($node_index+1))
    
      vdc_ipv4key="vdc_vdc1_"$site_myid"_network_"$node_index"_ipaddr";
      ovfenv_ipv4key="network_"$node_index"_ipaddr";
      [ "${vdcpropMap[$vdc_ipv4key]}" != "${ovfenvpropMap[$ovfenv_ipv4key]}" ] && echo "false" && return
    
      vdc_ipv6key="vdc_vdc1_"$site_myid"_network_"$node_index"_ipaddr6";
      ovfenv_ipv6key="network_"$node_index"_ipaddr6";
      [ -z ${vdcpropMap[$vdc_ipv6key]} ] && vdcpropMap[$vdc_ipv6key]="::0"
      [ "${vdcpropMap[$vdc_ipv6key]}" != "${ovfenvpropMap[$ovfenv_ipv6key]}" ] && echo "false" && return
    done 
   
    vdc_vipkey="vdc_vdc1_"$site_myid"_network_vip";
    if [[ ${vdcpropMap[$vdc_vipkey]} == *":"* ]]; then
        ovfenv_vip6key="network_vip6"
        [ -z ${vdcpropMap[$vdc_vipkey]} ] && vdcpropMap[$vdc_vipkey]="::0"
        [ "${vdcpropMap[$vdc_vipkey]}" != "${ovfenvpropMap[$ovfenv_vip6key]}" ] && echo "false" && return
    else
        ovfenv_vipkey="network_vip"
        [ "${vdcpropMap[$vdc_vipkey]}" != "${ovfenvpropMap[$ovfenv_vipkey]}" ] && echo "false" && return
    fi 
    
    echo "true" && return
}

_checkIPConsistencyInMultiSitesEnv() {
    echo -n "In multiple sites env, check if IP is consistent between ovfenv and vdc properties"
    
    # Single site IP change via vSphere or Installer will be handled furtherly by IpReconfigManger
    /etc/systool --getvdcprops | grep site_ids | grep ','
    [ $? -ne 0 ] && return

    ret=$(_isIPConsistent)
    if [ $ret == "false" ]; then
        echo -e "\n\e[1;31m***\n*** IP configuration can not be altered from vSphere or Installer in multiple sites env.\n*** Please power off, revert it and follow the user guide to change IP in multiple sites environment.\n***\n*** Press any key to power off this VM\n***\e[0m"
        read -n 1
        /etc/systool --poweroff
        exit
    fi
}

_set_storageos_variable() {
    sed -i "s,${1}=\"[a-z\-]*\",${1}=\"${2}\",g" ${STORAGEOS_SYSCONFIG}
}

_setSysconfigEnv() {

    /sbin/findfs UID="3c426f75-726e-6520-2f6f-7666656e763e" >/dev/null 2>&1 && STORAGEOS_BOOT_MODE=config

    for arg in $(</proc/cmdline) ; do
        case ${arg} in
            boot_mode=*) STORAGEOS_BOOT_MODE="${arg#*=}" ;;
            dev_mode=*) STORAGEOS_DEV_MODE="${arg#*=}" ;;
            ipreconfig_mode=*) STORAGEOS_IPRECONFIG_MODE="${arg#*=}" ;;
        esac
    done

    _set_storageos_variable STORAGEOS_IPRECONFIG_MODE ${STORAGEOS_IPRECONFIG_MODE}
    _set_storageos_variable STORAGEOS_DEV_MODE ${STORAGEOS_DEV_MODE}
    _set_storageos_variable STORAGEOS_BOOT_MODE ${STORAGEOS_BOOT_MODE}
}

case ${1} in
    start|restart|reload)

        echo -n "Initializing storageos environment variables"
        _setSysconfigEnv

        # 1. In "normal" mode
        #    ovfenv properties are generated and ViPR is running.
        # 2. In "config" and "redeploy" mode
        #    We only run vipr installer for reconfiguration and redeployment purpose etc.
        if [ "${STORAGEOS_BOOT_MODE}" == "normal" ]; then
            # create a flag file for normal boot mode. Some services should be skipped
            # during boot for config/redeploy mode
            touch /var/run/storageos/bootmode_normal
        else
            _checkConfigurable
            echo -n "Initializing security properties"
            /etc/systool --reconfig-security 2>>/var/log/genconfig.log || rc_failed 1
            rc_status -v
            exit
        fi 

        /etc/diskresizetool

        /opt/storageos/bin/ipreconfig ${STORAGEOS_IPRECONFIG_MODE}

        if [ "${STORAGEOS_BOOT_MODE}" == "normal" ]; then
            _checkIPConsistencyInMultiSitesEnv
        fi

        echo -n "Initializing configuration properties"
        /etc/systool --initializeprops 2>>/var/log/genconfig.log || rc_failed 1
        rc_status -v
        echo -n "Generating configuration files"
        /etc/systool --getprops | /etc/genconfig --test 2>>/var/log/genconfig.log || rc_failed 1
        rc_status -v
        ;;
    stop|status)
        rc_failed 0
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status|reload}"
        exit 1
esac

rc_exit


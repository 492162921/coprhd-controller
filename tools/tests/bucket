#!/usr/bin/python
#
# Copyright (c) 2015 EMC Corporation
# All Rights Reserved
#

import argparse
import sys
import os
from bourne import Bourne

#----------------------------------------------------------------------
# ECS bucket cli functions
#----------------------------------------------------------------------

def ecs_bucket_create(args):
    bourne.connect(args.ip)
    bourne.login( "root", "ChangeMe1!")
    project_uri = bourne.project_query(args.project)
    cos_uri     = bourne.cos_query('object', args.cos) #take care of 'object'
    nh_uri      = bourne.neighborhood_query(args.neighborhood)
    s = bourne.ecs_bucket_create(args.label, project_uri, nh_uri, cos_uri, args.soft_quota, args.hard_quota, args.owner)
    if (s['state'] == 'ready'):
        print 'ECS bucket created with id ' + s['resource']['id']
    else:
        print 'ECS bucket create failed.'

    
#----------------------------------------------------------------------
# command-line parsing
#----------------------------------------------------------------------

try:
    bourne_ip = os.environ['BOURNE_IPADDR']
except:
    bourne_ip = 'localhost'

#bucket create <cmd> <cmd_args>
parser = argparse.ArgumentParser(description = 'Bourne ECS bucket cli usage.')
parser.add_argument('cmd', help = 'cmd = (create | delete')
parser.add_argument('--ip',	metavar = 'ipaddr',	help = 'IP address of bourne', default=bourne_ip)

# bucket create label project cos soft_quota hard_quota owner
create = argparse.ArgumentParser(parents = [parser], conflict_handler='resolve')
create.add_argument('label',		help = 'label of bucket')
create.add_argument('project',		help = 'container project name')
create.add_argument('neighborhood',	help = 'neighborhood/varray where bucket should be created')
create.add_argument('cos',		    help = 'cos/vpool name for bucket')
create.add_argument('soft_quota',	help = 'soft quota of bucket')
create.add_argument('hard_quota',	help = 'hard quota of bucket')
create.add_argument('owner',		help = 'owner of bucket')


#----------------------------------------------------------------------
# Main script
#----------------------------------------------------------------------

try:

    if (len(sys.argv) > 1):
            cmd = sys.argv[1]
    else:
            cmd = None

    bourne = Bourne()

    if (cmd == "create"):
        args = create.parse_args()
        ecs_bucket_create(args)
except:
    raise



# python bucket create python1 myproj varray vpool 1024 2048 root
# python bucket create python1 myproj varray vpool 1024 2048 root --ip 10.247.142.254
# python cos create object ecs_vpool --description 'cos_vpool for ECS' true --protocols S3 --provisionType 'Thick' --neighborhoods nh
# discoveredsystem create ecs_sanity ecs 10.249.239.35 4443 root ChangeMe


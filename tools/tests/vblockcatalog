#!/usr/bin/python
#
# Copyright (c) 2017 EMC Corporation
# All Rights Reserved
#
import argparse
import sys
import os
from bourne import *

#----------------------------------------------------------------------
# vblock catalog cli functions
#----------------------------------------------------------------------

def vblockcatalog_provisionbaremetalhost(args):
    bourne.connect(args.ip)
    tenanturi = bourne.tenant_query(args.tenant)
    projuri = bourne.project_query(args.project)
    varrayuri = bourne.neighborhood_query(args.virtualArray)
    vpooluri = bourne.cos_query("block", args.virtualPool)
    cvpuri = bourne.computevirtualpool_query(args.computeVirtualPool)
    params = { 'name':args.clustername,
               'size':args.bootvolsize,
               'fqdns':args.fqdns,
               'project':projuri,
               'virtualArray':varrayuri,
               'virtualPool':vpooluri,
               'computeVirtualPool':cvpuri,
               'hlu':args.hlu
             }
    parameters = ",".join(["%s=%s" % (k, v) for k, v in params.items()])
    order = bourne.catalog_order(args.catalogservicename, args.tenant, parameters) 
    print order

def vblockcatalog_addbaremetalhost(args):
    bourne.connect(args.ip)
    tenanturi = bourne.tenant_query(args.tenant)
    projuri = bourne.project_query(args.project)
    varrayuri = bourne.neighborhood_query(args.virtualArray)
    vpooluri = bourne.cos_query("block", args.virtualPool)
    cvpuri = bourne.computevirtualpool_query(args.computeVirtualPool)
    clusteruri = bourne.cluster_query(args.tenant+'/'+args.clustername)
    params = { 'cluster':clusteruri,
               'size':args.bootvolsize,
               'fqdns':args.fqdns,
               'project':projuri,
               'virtualArray':varrayuri,
               'virtualPool':vpooluri,
               'computeVirtualPool':cvpuri,
               'hlu':args.hlu
             }
    parameters = ",".join(["%s=%s" % (k, v) for k, v in params.items()])
    order = bourne.catalog_order(args.catalogservicename, args.tenant, parameters) 
    print order

def vblockcatalog_addhosttocluster(args):
    bourne.connect(args.ip)
    tenanturi = bourne.tenant_query(args.tenant)
    projuri = bourne.project_query(args.project)
    varrayuri = bourne.neighborhood_query(args.virtualArray)
    vpooluri = bourne.cos_query("block", args.virtualPool)
    cvpuri = bourne.computevirtualpool_query(args.computeVirtualPool)
    clusteruri = bourne.cluster_query(args.tenant+'/'+args.clustername)
    computeimageuri = bourne.computeimage_query(args.computeImage)
    vcenteruri = bourne.vcenter_query(args.vcenter)
    datacenteruri = bourne.datacenter_query(args.datacenter)
    params = { 'cluster':clusteruri,
               'size':args.bootvolsize,
               'fqdns':args.fqdns,
               'project':projuri,
               'virtualArray':varrayuri,
               'virtualPool':vpooluri,
               'computeVirtualPool':cvpuri,
               'hlu':args.hlu,
               'computeImage':computeimageuri,
               'ips':args.ips,
               'netmask':args.netmask,
               'gateway':args.gateway,
               'managementNetwork':args.managementNetwork,
               'ntpServer':args.ntpServer,
               'dnsServers':args.dnsServers,
               'hostPassword':args.hostPassword,
               'vcenter':vcenteruri,
               'datacenter':datacenteruri
             }
    parameters = ",".join(["%s=%s" % (k, v) for k, v in params.items()])
    order = bourne.catalog_order(args.catalogservicename, args.tenant, parameters) 
    print order


#----------------------------------------------------------------------
# command-line parsing
#----------------------------------------------------------------------

try:
    bourne_ip = os.environ['BOURNE_IPADDR']
except:
    bourne_ip = 'localhost'

# catalog <cmd> <cmd_args>  [--ip ipaddr]
parser = argparse.ArgumentParser(description = 'Bourne catalog cli usage.')
parser.add_argument('cmd', help = 'cmd = (provisionbaremetalhost | addbaremetalhost )')
parser.add_argument('--ip',	metavar = 'ipaddr',	help = 'IP address of bourne', default=bourne_ip)

# provisionbaremetalhost catalog order service tenant parameters
provisionbaremetalhost = argparse.ArgumentParser(parents = [parser], conflict_handler='resolve')
provisionbaremetalhost.add_argument('tenant', help = 'tenant for the catalog service')
provisionbaremetalhost.add_argument('clustername',            help = 'label for the cluster')
provisionbaremetalhost.add_argument('bootvolsize',           help = 'size of boot volume')
provisionbaremetalhost.add_argument('fqdns',           help = 'fqdn host names')
provisionbaremetalhost.add_argument('project',           help = 'project name')
provisionbaremetalhost.add_argument('virtualArray',           help = 'virtual array name')
provisionbaremetalhost.add_argument('virtualPool',           help = 'virtual pool name')
provisionbaremetalhost.add_argument('computeVirtualPool',           help = 'compute virtual pool name')
provisionbaremetalhost.add_argument('hlu',           help = 'boot volume HLU')
provisionbaremetalhost.add_argument('catalogservicename',           help = 'name of catalog service')

# addbaremetalhost catalog order service tenant parameters
addbaremetalhost = argparse.ArgumentParser(parents = [parser], conflict_handler='resolve')
addbaremetalhost.add_argument('tenant', help = 'tenant for the catalog service')
addbaremetalhost.add_argument('clustername',            help = 'label for the cluster')
addbaremetalhost.add_argument('bootvolsize',           help = 'size of boot volume')
addbaremetalhost.add_argument('fqdns',           help = 'fqdn host names')
addbaremetalhost.add_argument('project',           help = 'project name')
addbaremetalhost.add_argument('virtualArray',           help = 'virtual array name')
addbaremetalhost.add_argument('virtualPool',           help = 'virtual pool name')
addbaremetalhost.add_argument('computeVirtualPool',           help = 'compute virtual pool name')
addbaremetalhost.add_argument('hlu',           help = 'boot volume HLU')
addbaremetalhost.add_argument('catalogservicename',           help = 'name of catalog service')

# addhosttocluster catalog order service tenant parameters
addhosttocluster = argparse.ArgumentParser(parents = [parser], conflict_handler='resolve')
addhosttocluster.add_argument('tenant', help = 'tenant for the catalog service')
addhosttocluster.add_argument('clustername',            help = 'label for the cluster')
addhosttocluster.add_argument('bootvolsize',           help = 'size of boot volume')
addhosttocluster.add_argument('fqdns',           help = 'fqdn host names')
addhosttocluster.add_argument('project',           help = 'project name')
addhosttocluster.add_argument('virtualArray',           help = 'virtual array name')
addhosttocluster.add_argument('virtualPool',           help = 'virtual pool name')
addhosttocluster.add_argument('computeVirtualPool',           help = 'compute virtual pool name')
addhosttocluster.add_argument('hlu',           help = 'boot volume HLU')
addhosttocluster.add_argument('catalogservicename',           help = 'name of catalog service')
addhosttocluster.add_argument('computeImage', help = 'compute image name')
addhosttocluster.add_argument('ips',            help = 'ips of host')
addhosttocluster.add_argument('netmask',           help = 'netmask')
addhosttocluster.add_argument('gateway',           help = 'gateway IP')
addhosttocluster.add_argument('managementNetwork',           help = 'managementNetwork')
addhosttocluster.add_argument('ntpServer',           help = 'ntpserver')
addhosttocluster.add_argument('dnsServers',           help = 'dnsServers')
addhosttocluster.add_argument('hostPassword',           help = 'host password')
addhosttocluster.add_argument('vcenter',           help = 'vcenter name')
addhosttocluster.add_argument('datacenter',           help = 'datacenter name')


#----------------------------------------------------------------------
# Main script
#----------------------------------------------------------------------

try:
    if (len(sys.argv) > 1):
        cmd = sys.argv[1]
    else:
        cmd = None

    bourne = Bourne()

    if   (cmd == "provisionbaremetalhost"):
        args = provisionbaremetalhost.parse_args()
        vblockcatalog_provisionbaremetalhost(args)
    elif   (cmd == "addbaremetalhost"):
        args = addbaremetalhost.parse_args()
        vblockcatalog_addbaremetalhost(args)
    elif   (cmd == "addhosttocluster"):
        args = addhosttocluster.parse_args()
        vblockcatalog_addhosttocluster(args)
    else:
        parser.print_help()
except:
    raise

package com.watch4net.apg.remote.databaseaccessorservice;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "DatabaseAccessorService", targetNamespace = "http://www.watch4net.com/APG/Remote/DatabaseAccessorService", wsdlLocation = "https://lglak140:58443/APG-WS/wsapi/db?wsdl")
public class DatabaseAccessorService
    extends Service
{

    private final static URL DATABASEACCESSORSERVICE_WSDL_LOCATION;
    private final static WebServiceException DATABASEACCESSORSERVICE_EXCEPTION;
    private final static QName DATABASEACCESSORSERVICE_QNAME = new QName("http://www.watch4net.com/APG/Remote/DatabaseAccessorService", "DatabaseAccessorService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://lglak140:58443/APG-WS/wsapi/db?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DATABASEACCESSORSERVICE_WSDL_LOCATION = url;
        DATABASEACCESSORSERVICE_EXCEPTION = e;
    }

    public DatabaseAccessorService() {
        super(__getWsdlLocation(), DATABASEACCESSORSERVICE_QNAME);
    }

    public DatabaseAccessorService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DATABASEACCESSORSERVICE_QNAME, features);
    }

    public DatabaseAccessorService(URL wsdlLocation) {
        super(wsdlLocation, DATABASEACCESSORSERVICE_QNAME);
    }

    public DatabaseAccessorService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DATABASEACCESSORSERVICE_QNAME, features);
    }

    public DatabaseAccessorService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DatabaseAccessorService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DatabaseAccessor
     */
    @WebEndpoint(name = "DatabaseAccessorPort")
    public DatabaseAccessor getDatabaseAccessorPort() {
    	DatabaseAccessor dbport = super.getPort(new QName("http://www.watch4net.com/APG/Remote/DatabaseAccessorService", "DatabaseAccessorPort"), DatabaseAccessor.class);
    	((BindingProvider) dbport).getRequestContext().put(BindingProvider.USERNAME_PROPERTY, "admin");
        ((BindingProvider) dbport).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "changeme");
		return dbport;
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DatabaseAccessor
     */
    @WebEndpoint(name = "DatabaseAccessorPort")
    public DatabaseAccessor getDatabaseAccessorPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.watch4net.com/APG/Remote/DatabaseAccessorService", "DatabaseAccessorPort"), DatabaseAccessor.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DATABASEACCESSORSERVICE_EXCEPTION!= null) {
            throw DATABASEACCESSORSERVICE_EXCEPTION;
        }
        return DATABASEACCESSORSERVICE_WSDL_LOCATION;
    }

}
